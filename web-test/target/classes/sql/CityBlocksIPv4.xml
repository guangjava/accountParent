<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guang.webtest.dao.CityBlocksIPv4Dao">

  <!--返回GEOLITE2_CITY_BLOCKS_IPV4表 和 CityBlocksIPv4的映射  map集合-->
     <resultMap id="CityBlocksIPv4ResultMap" type="CityBlocks" >
	          <result column="network" property="network" jdbcType="CHAR"/>
	          <result column="mask" property="mask" jdbcType="INTEGER"/>
	          <result column="geoname_id" property="geonameId" jdbcType="INTEGER"/>
	          <result column="registered_country_geoname_id" property="registeredCountryGeonameId" jdbcType="INTEGER"/>
	          <result column="represented_country_geoname_id" property="representedCountryGeonameId" jdbcType="INTEGER"/>
	          <result column="is_anonymous_proxy" property="isAnonymousProxy" jdbcType="CHAR"/>
	          <result column="is_satellite_provider" property="isSatelliteProvider" jdbcType="CHAR"/>
	          <result column="postal_code" property="postalCode" jdbcType="CHAR"/>
	          <result column="latitude" property="latitude" jdbcType="CHAR"/>
	          <result column="longitude" property="longitude" jdbcType="CHAR"/>
	          <result column="accuracy_radius" property="accuracyRadius" jdbcType="INTEGER"/>
     </resultMap>
     
     <!--GEOLITE2_CITY_BLOCKS_IPV4表列名称集合-->
	  <sql id="CityBlocksIPv4_Column_List" >
	       t.network,
	       t.mask,
	       t.geoname_id,
	       t.registered_country_geoname_id,
	       t.represented_country_geoname_id,
	       t.is_anonymous_proxy,
	       t.is_satellite_provider,
	       t.postal_code,
	       t.latitude,
	       t.longitude,
	       t.accuracy_radius
	  </sql>
     
     <sql id="CityBlocksIPv4_Where_List" >
	        and  t.network=#{network,jdbcType=CHAR}
	        and  t.mask=#{mask,jdbcType=INTEGER}
	        and  t.geoname_id=#{geonameId,jdbcType=INTEGER}
	        and  t.registered_country_geoname_id=#{registeredCountryGeonameId,jdbcType=INTEGER}
	        and  t.represented_country_geoname_id=#{representedCountryGeonameId,jdbcType=INTEGER}
	        and  t.is_anonymous_proxy=#{isAnonymousProxy,jdbcType=CHAR}
	        and  t.is_satellite_provider=#{isSatelliteProvider,jdbcType=CHAR}
	        and  t.postal_code=#{postalCode,jdbcType=CHAR}
	        and  t.latitude=#{latitude,jdbcType=CHAR}
	        and  t.longitude=#{longitude,jdbcType=CHAR}
	        and  t.accuracy_radius=#{accuracyRadius,jdbcType=INTEGER}
     </sql>
     
	 <select id="selectByPrimaryKey"  parameterType="String" resultMap="CityBlocksIPv4ResultMap" fetchSize="1">
	    select 
       <include refid="CityBlocksIPv4_Column_List" />
       from  GEOLITE2_CITY_BLOCKS_IPV4 t
       where t.NETWORK =#{network,jdbcType=CHAR}
	 </select>
	      
	 <select id="selectCountBySelective"  parameterType="CityBlocks" resultType="Integer" useCache="false">
	     select count(1) from  GEOLITE2_CITY_BLOCKS_IPV4 t
	     where 1=1 
	     <include refid="CityBlocksIPv4_Where_List"/>
	 </select>
	  
	 
	 <insert id="insert"  parameterType="CityBlocks">
	     insert into GEOLITE2_CITY_BLOCKS_IPV4 
	    (
	         network,
	         mask,
	         geoname_id,
	         registered_country_geoname_id,
	         represented_country_geoname_id,
	         is_anonymous_proxy,
	         is_satellite_provider,
	         postal_code,
	         latitude,
	         longitude,
	         accuracy_radius
	    )
	    values 
	    (
	         #{network,jdbcType=CHAR},
	         #{mask,jdbcType=INTEGER},
	         #{geonameId,jdbcType=INTEGER},
	         #{registeredCountryGeonameId,jdbcType=INTEGER},
	         #{representedCountryGeonameId,jdbcType=INTEGER},
	         #{isAnonymousProxy,jdbcType=CHAR},
	         #{isSatelliteProvider,jdbcType=CHAR},
	         #{postalCode,jdbcType=CHAR},
	         #{latitude,jdbcType=CHAR},
	         #{longitude,jdbcType=CHAR},
	         #{accuracyRadius,jdbcType=INTEGER}
	    )
	 </insert>
	  
	 <delete id="deleteByPrimaryKey"  parameterType="String" >
	    delete from GEOLITE2_CITY_BLOCKS_IPV4
        where NETWORK=#{network,jdbcType=CHAR}
	 </delete>
	 
	 <update id="updateByPrimaryKey" parameterType="CityBlocks">
	   update GEOLITE2_CITY_BLOCKS_IPV4 set
	    <trim  suffixOverrides="," >
	           network = #{network,jdbcType=CHAR},
	           mask = #{mask,jdbcType=INTEGER},
	           geoname_id = #{geonameId,jdbcType=INTEGER},
	           registered_country_geoname_id = #{registeredCountryGeonameId,jdbcType=INTEGER},
	           represented_country_geoname_id = #{representedCountryGeonameId,jdbcType=INTEGER},
	           is_anonymous_proxy = #{isAnonymousProxy,jdbcType=CHAR},
	           is_satellite_provider = #{isSatelliteProvider,jdbcType=CHAR},
	           postal_code = #{postalCode,jdbcType=CHAR},
	           latitude = #{latitude,jdbcType=CHAR},
	           longitude = #{longitude,jdbcType=CHAR},
	           accuracy_radius = #{accuracyRadius,jdbcType=INTEGER},
       </trim>
	   where NETWORK=#{network,jdbcType=CHAR}
	 </update>
	 
</mapper>