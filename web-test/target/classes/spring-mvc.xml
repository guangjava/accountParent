<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd 
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"
	default-lazy-init="true" default-autowire="byName">
	<bean
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<context:component-scan base-package="com.guang.webtest"></context:component-scan>
	<!-- *****测试default-autowire 需要在beans添加default-autowire，或者在bean中添加autowire属性****** -->
	<!-- 测试 replaced-method -->
	<bean id="replacer" class="com.guang.webtest.util.MethodReplace"></bean>
	<bean id="systemService"
		class="com.guang.webtest.service.impl.SystemServiceImpl">
		<replaced-method name="replaceMethod" replacer="replacer">
			<arg-type>String</arg-type>
			<arg-type>int</arg-type>
		</replaced-method>
	</bean>
	<!-- &&&&&& 测试qualifier &&&&&&& -->
	<bean id="subService"
		class="com.guang.webtest.service.impl.SubServiceImpl"
		scope="prototype">
		<qualifier value="a"></qualifier>
	</bean>
	<bean id="subService2"
		class="com.guang.webtest.service.impl.SubServiceImpl2">
		<qualifier value="b"></qualifier>
	</bean>
	<!-- &&&&&&&&&&&&&&&&&&&&&&&&&&& -->
	<!-- ****************************** -->
	<bean id="lookupService"
		class="com.guang.webtest.service.LookupService">
		<lookup-method name="getSubService" bean="subService" />
	</bean>
	<!-- *******测试factory-method****** -->
	<!-- 静态方法 -->
	<!-- <bean id="staticBeanFactory" class="com.guang.webtest.factory.StaticBeanFactory" 
		factory-method="getBean"> <constructor-arg index="0" value="base1"></constructor-arg> 
		</bean> -->
	<!-- 实例工厂 -->
	<!-- <bean id="instanceBeanFactory" class="com.guang.webtest.factory.InstanceBeanFactory"></bean> 
		<bean id="baseBean" factory-bean="instanceBeanFactory" factory-method="getBean"> 
		<constructor-arg value="base2"></constructor-arg> </bean> -->
	<!-- 实现接口 -->
	<bean id="springBeanFactory"
		class="com.guang.webtest.factory.SpringBeanFactory">
		<property name="name" value="base2"></property>
		<qualifier value="factory"></qualifier>
	</bean>
	<!-- ****************************** -->
	<!-- ********测试merge************** -->
	<bean id="parentBean"
		class="com.guang.webtest.bean.impl.ParentBean">
		<property name="nameList">
			<list>
				<value>papa</value>
				<value>mama</value>
			</list>
		</property>
		<qualifier value="parent"></qualifier>
	</bean>
	<bean id="childBean" class="com.guang.webtest.bean.impl.ParentBean"
		parent="parentBean">
		<property name="nameList">
			<list merge="default">
				<value>brother</value>
				<value>sister</value>
			</list>
		</property>
	</bean>
	<!-- ****************************** -->
	<!-- *******测试local-override****** -->
	<!-- <util:properties id="properties"> <prop key="productName">local</prop> 
		</util:properties> <context:property-placeholder location="classpath:test.properties" 
		properties-ref="properties" local-override="true" /> <context:property-override/> -->
	<!-- ****************************** -->
	<!-- *********测试load-time-weaver** -->
	<!-- <context:load-time-weaver aspectj-weaving="autodetect" /> -->
	<!-- ****************************** -->
	<!-- *********测试spring-configured* -->
	<!-- <context:spring-configured></context:spring-configured> -->
	<!-- ****************************** -->
	<!-- *******测试profile************* -->
	<beans profile="test">
		<bean id="configBean"
			class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>classpath:test.properties</value>
				</list>
			</property>
		</bean>
	</beans>
	<beans profile="local">
		<bean id="configBean"
			class="org.springframework.beans.factory.config.PropertiesFactoryBean">
			<property name="locations">
				<list>
					<value>classpath:local.properties</value>
				</list>
			</property>
		</bean>
	</beans>
	<!-- ************************************* -->
</beans>